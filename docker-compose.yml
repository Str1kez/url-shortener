services:
  db:
    image: postgres:14
    container_name: shortener_db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - 'db-data:/var/lib/postgresql/data'
    env_file:
      - .env
    ports:
      - $POSTGRES_PORT:5432
  bouncer:
    image: edoburu/pgbouncer:1.18.0
    container_name: pgbouncer_shortener
    restart: unless-stopped
    ports:
      - 6432:5432
    env_file:
      - .env
    environment:
      - DB_USER=$POSTGRES_USER
      - DB_PASSWORD=$POSTGRES_PASSWORD
      - DB_HOST=db
      - DB_NAME=$POSTGRES_DB
      - ADMIN_USERS=postgres,$POSTGRES_USER
    volumes:
      - './pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro'
      - './userlist.txt:/etc/pgbouncer/userlist.txt:ro'
    depends_on:
      db:
        condition: service_healthy
  shortener:
    build: .
    container_name: url_shortener
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 8001:8001
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      - bouncer
        # condition: service_healthy

volumes:
  db-data:

networks:
  default:
    name: load-test-net

